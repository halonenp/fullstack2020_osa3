{"version":3,"sources":["services/persons.js","components/message.js","components/error.js","index.js"],"names":["baseUrl","getAll","axios","get","then","response","data","newObject","post","id","delete","put","Message","message","className","Error","App","useState","persons","setPersons","newName","setNewName","newNumber","setNewNumber","showAll","newFilter","setNewFilter","setMessage","error","setError","useEffect","personsService","personsToShow","filter","person","name","toLowerCase","includes","value","onChange","event","console","log","target","onSubmit","preventDefault","nameObject","number","some","window","confirm","per","find","map","catch","setTimeout","concat","handleNameChange","handleNumberChange","removePerson","p","MapPersons","props","key","Person","onClick","PersonForm","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7197b41.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  axios.delete(`${baseUrl}/${id}`)\r\n  return getAll()\r\n}\r\n\r\nexport default { getAll, create, remove, update }","import React from 'react'\r\n\r\nconst Message = ({ message }) => {\r\n    if (message === null)\r\n        return null\r\n    return (\r\n        <p className=\"message\">\r\n            {message}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Message","import React from 'react'\r\n\r\nconst Error = ({ message }) => {\r\n    if (message === null)\r\n        return null\r\n    return (\r\n        <p className=\"error\">\r\n            {message}\r\n        </p>\r\n    )\r\n}\r\n\r\nexport default Error","import ReactDOM from 'react-dom'\nimport React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\nimport './index.css'\nimport Message from './components/message'\nimport Error from './components/error'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [showAll] = useState(false)\n  const [newFilter, setNewFilter] = useState('')\n  const [message, setMessage] = useState(null)\n  const [error, setError] = useState(null)\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  const personsToShow = showAll\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const add = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    if (persons.some(person => person.name === nameObject.name)) {\n      if (window.confirm(`Update number for ${newName}?`)) {\n        const per = persons.find(per => per.name === newName)\n        personsService\n          .update(per.id, nameObject)\n          .then(response => {\n            setPersons(persons.map(person => person.id !== per.id ? person : response))\n            setNewName('')\n            setNewNumber('')\n          })\n          .catch(error => {\n            setMessage(null)\n            setError(\n              `${newName} has already been removed from server`)\n            setTimeout(() => {\n              setError(null)\n            }, 5000)\n          })\n        //alert(`${newName} is already added to phonebook`)\n      }\n    } else {\n      personsService\n        .create(nameObject)\n        .then(response => {\n          setPersons(persons.concat(response))\n          setNewName('')\n          setNewNumber('')\n        })\n        \n        .catch(error => {\n          setMessage(null)\n          setError(\n            'Name minimum length 3 and number minimum length 8')\n          setTimeout(() => {\n            setError(null)\n          }, 5000)\n        })\n      setMessage(\n        `${newName} added.`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  const removePerson = (person) => {\n    if (window.confirm(`Delete ${person.name} ?`)) {\n      personsService\n        .remove(person.id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n        .catch(error => {\n          setMessage(null)\n          setError(\n            `${person.name} has already been removed from server`)\n          setTimeout(() => {\n            setError(null)\n          }, 5000)\n        })\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== person.id))\n        })\n      setMessage(\n        `${person.name} removed succesfully.`)\n      setTimeout(() => {\n        setMessage(null)\n      }, 5000)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Error message={error} />\n      <Message message={message} />\n      <div>\n        filter shown with: <input value={newFilter} onChange={handleFilterChange} />\n      </div>\n      <h2>add a new</h2>\n      <form onSubmit={add}>\n        <PersonForm newName={newName} handleNameChange={handleNameChange}\n          newNumber={newNumber} handleNumberChange={handleNumberChange} />\n      </form>\n      <h2>Numbers</h2>\n      <MapPersons personsToShow={personsToShow} removePerson={removePerson} />\n    </div>\n  )\n}\n\nconst MapPersons = (props) => {\n  return (\n    <div>\n      {props.personsToShow.map((person) =>\n        <Person key={person.name} person={person} removePerson={() => props.removePerson(person)} />\n      )}\n    </div>\n  )\n}\n\nconst Person = ({ person, removePerson }) => {\n  return (\n    <p>\n      {person.name} {person.number}\n      <button onClick={removePerson} >delete</button>\n    </p>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <div>\n        name: <input value={props.newName} onChange={props.handleNameChange} />\n      </div>\n      <div>\n        number: <input value={props.newNumber} onChange={props.handleNumberChange} />\n      </div>\n      <button type=\"submit\">add</button>\n    </div>\n  )\n}\n\nexport default App\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}